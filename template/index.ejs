<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>reveal</title>
    <link rel="stylesheet" href="/reveal.js/css/reveal.css">
    <link rel="stylesheet" href="/reveal.js/css/theme/<%= theme %>.css">
    <link rel="stylesheet" href="/highlight.js/styles/<%= highlightTheme %>.css">
    <script>
        var link = document.createElement('link');
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match(/print-pdf/gi) ? '/reveal.js/css/print/pdf.css' : '/reveal.js/css/print/paper.css';
        document.getElementsByTagName('head')[0].appendChild(link);
    </script>
</head>
<body>
<div class="reveal">
    <div class="slides">
        <section data-markdown="/node-reveal/reveal.md"></section>
    </div>
</div>
<script src="/reveal.js/lib/js/head.min.js"></script>
<script src="/reveal.js/js/reveal.js"></script>
<script src="/js-polyfills/url.js"></script>
<script>

    var url = new URL(location.href);
    var isMaster = url.searchParams.get('role') === 'master';

    Reveal.initialize({

        controls: true,
        progress: true,
        history: true,
        center: true,
        showNotes: isMaster,

        transition: '<%= transition %>',

        dependencies: [
            {
                src: '/reveal.js/plugin/markdown/marked.js'
            },
            {
                src: '/reveal.js/plugin/markdown/markdown.js'
            },
            {
                src: '/reveal.js/plugin/notes/notes.js',
                async: true
            },
            {
                src: '/reveal.js/plugin/zoom-js/zoom.js',
                async: true
            },
            {
                src: '/reveal.js/plugin/highlight/highlight.js',
                async: true,
                callback: function() {
                    hljs.initHighlightingOnLoad();
                }
            }
        ]
    });
</script>
<script type="text/javascript" src="/socket.io-client/dist/socket.io.js"></script>
<script>
    var socket = io.connect(location.host);
    socket.on('connected', function(data) {
        console.log('[reveal]', 'connected');
        document.title = data.title;
    });
    socket.on('disconnected', function() {
        console.log('[reveal]', 'disconnected');
    });
    socket.on('reload', function() {
        location.reload();
    });
    socket.on('role-tick', function() {
        url.searchParams.set('role', '');
        location.href = url;
    });
    if (isMaster) {
        socket.emit('role-update', 'master');
        Reveal.addEventListener('slidechanged', function() {
            socket.emit('slidechanged', Reveal.getState());
        });
    } else {
        socket.on('slidechanged', function(state) {
            Reveal.setState(state);
        });
    }
</script>
</body>
</html>
